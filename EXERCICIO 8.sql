DROP DATABASE IF EXISTS DBLOCADORA;

CREATE DATABASE DBLOCADORA;

USE DBLOCADORA;

CREATE TABLE CLIENTE(
  IDCLIENTE INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(100) NOT NULL,
  RUA VARCHAR(100),
  NUMERO VARCHAR(10),
  COMPLEMENTO VARCHAR(60),
  BAIRRO VARCHAR(100),
  CEP CHAR(8),
  CIDADE VARCHAR(60),
  ESTADO CHAR(2),
  FONE_RESIDENCIAL VARCHAR(15) NOT NULL,
  FONE_CELULAR VARCHAR(15),
  FONE_REFERENCIA VARCHAR(15)
);

CREATE TABLE VEICULO(
  IDVEICULO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  MARCA VARCHAR(45),
  MODELO VARCHAR(45),
  PLACA CHAR(7) NOT NULL,
  ANO_FABRICACAO INT,
  ANO_MODELO INT,
  COMBUSTIVEL ENUM('GASOLINA', 'ALCOOL', 'FLEX', 'GNV', 'DIESEL'),
  FOTO VARCHAR(255)
);

CREATE TABLE FUNCIONARIO(
  IDFUNCIONARIO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  NOME VARCHAR(100),
  LOGIN VARCHAR(15) UNIQUE,
  SENHA VARCHAR(15)
);

INSERT INTO FUNCIONARIO(NOME, LOGIN, SENHA)VALUES('admin', 'admin', '123456');

CREATE TABLE LOCACAO(
  IDLOCACAO INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  IDCLIENTE INT NOT NULL,
  IDVEICULO INT NOT NULL,
  IDFUNCIONARIO INT NOT NULL,
  DT_LOCACAO DATETIME NOT NULL,
  KM_LOCACAO INT NOT NULL,
  DT_ENTREGA DATETIME,
  KM_ENTREGA INT,
  CONSTRAINT FK_LOCACAO_CLIENTE FOREIGN KEY (IDCLIENTE) REFERENCES CLIENTE(IDCLIENTE) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_LOCACAO_VEICULO FOREIGN KEY (IDVEICULO) REFERENCES VEICULO(IDVEICULO) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_LOCACAO_FUNCIONARIO FOREIGN KEY (IDFUNCIONARIO) REFERENCES FUNCIONARIO(IDFUNCIONARIO) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE OPCIONAL(
  IDOPCIONAL INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  DESCRICAO VARCHAR(100)
);

CREATE TABLE OPCIONAL_VEICULO(
  IDVEICULO INT NOT NULL,
  IDOPCIONAL INT NOT NULL,
  CONSTRAINT PK_OPCIONAL_VEICULO PRIMARY KEY (IDVEICULO, IDOPCIONAL),
  CONSTRAINT FK_OPCIONAL_VEICULO_VEICULO FOREIGN KEY (IDVEICULO) REFERENCES VEICULO(IDVEICULO) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_OPCIONAL_VEICULO_OPCIONAL FOREIGN KEY (IDOPCIONAL) REFERENCES OPCIONAL(IDOPCIONAL) ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE TABELA(
  IDTABELA INT NOT NULL PRIMARY KEY AUTO_INCREMENT,
  DESCRICAO VARCHAR(100),
  TIPO VARCHAR(50),
  VALOR DECIMAL(8,2)
);


CREATE TABLE TABELA_VEICULO(
  IDVEICULO INT NOT NULL,
  IDTABELA INT NOT NULL,
  CONSTRAINT PK_TABELA_VEICULO PRIMARY KEY (IDVEICULO, IDTABELA),
  CONSTRAINT FK_TABELA_VEICULO_VEICULO FOREIGN KEY (IDVEICULO) REFERENCES VEICULO(IDVEICULO) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_TABELA_VEICULO_TABELA FOREIGN KEY (IDTABELA) REFERENCES TABELA(IDTABELA) ON DELETE CASCADE ON UPDATE CASCADE
);


INSERT INTO CLIENTE VALUES (1,'JOÃO DA SILVA','BEIRA MAR','10','CASA','CENTRO','11223344','FLORIANOPOLIS','SC','4899887766','4899898876','4833776654');
INSERT INTO CLIENTE VALUES (2,'MARIA SANTOS','BEIRA PRINCIPAL','10','CASA','CENTRO','11223344','FLORIANOPOLIS','SC','4899887766','4899898876','4833776654');
INSERT INTO VEICULO VALUES (1,'FIAT','UNO','ASD4455',2013,2013,'GASOLINA','1404516219.JPG ');
INSERT INTO VEICULO VALUES (2,'FORD','KA','FFD3322',2014,2014,'GASOLINA','1404516365.JPG');
INSERT INTO OPCIONAL VALUES (1,'AR CONDICIONADO');
INSERT INTO OPCIONAL VALUES (2,'TRAVA ELETRICA');
INSERT INTO OPCIONAL VALUES (3,'DIREÇÃO HIDRAULICA');
INSERT INTO OPCIONAL_VEICULO VALUES (1,1);
INSERT INTO OPCIONAL_VEICULO VALUES (2,2);
INSERT INTO OPCIONAL_VEICULO VALUES (2,3);
INSERT INTO TABELA VALUES (1,'VALOR POR KM','KM', 10.00);
INSERT INTO TABELA VALUES (2,'VALOR POR DIA','DIA', 150.00);
INSERT INTO TABELA_VEICULO VALUES (1,1);
INSERT INTO TABELA_VEICULO VALUES (1,2);
INSERT INTO TABELA_VEICULO VALUES (2,1);
INSERT INTO TABELA_VEICULO VALUES (2,2);
INSERT INTO LOCACAO VALUES (1,1,1,1,'2013-10-02 00:00:00',123345,'2013-10-25 00:00:00',123556);
INSERT INTO LOCACAO VALUES (2,1,2,1,'2013-05-12 00:00:00',123345,'2013-05-25 00:00:00',123554);
INSERT INTO LOCACAO VALUES (3,1,2,1,'2014-10-02 00:00:00',123345,'2014-10-25 00:00:00',125646);
INSERT INTO LOCACAO VALUES (4,2,1,1,'2014-05-12 00:00:00',123345,'2014-05-25 00:00:00',123586);
INSERT INTO LOCACAO VALUES (5,2,2,1,'2015-10-02 00:00:00',123345,'2015-10-25 00:00:00',123594);
INSERT INTO LOCACAO VALUES (6,2,2,1,'2015-01-12 00:00:00',123345,'2015-01-25 00:00:00',123354);

-- QUESTÃO 01
SELECT
	CLIENTE.IDCLIENTE,
	CLIENTE.NOME,
	VEICULO.MARCA,
    VEICULO.MODELO,
    VEICULO.PLACA,
    LOCACAO.DT_LOCACAO
FROM
	CLIENTE
INNER JOIN LOCACAO ON CLIENTE.IDCLIENTE = LOCACAO.IDCLIENTE
INNER JOIN VEICULO ON LOCACAO.IDVEICULO = VEICULO.IDVEICULO;

-- QUESTÃO 02

SELECT
    VEICULO.IDVEICULO,
    VEICULO.MARCA,
    VEICULO.MODELO,
    COUNT(LOCACAO.IDLOCACAO) AS QUANTIDADE_DE_LOCACOES
FROM
    VEICULO
LEFT JOIN LOCACAO ON VEICULO.IDVEICULO = LOCACAO.IDVEICULO
GROUP BY
    VEICULO.IDVEICULO,
    VEICULO.MARCA,
    VEICULO.MODELO;

-- QUESTÃO 03

SELECT
    CLIENTE.IDCLIENTE,
    CLIENTE.NOME,
    LOCACAO.KM_LOCACAO,
    LOCACAO.KM_ENTREGA,
	LOCACAO.KM_ENTREGA - LOCACAO.KM_LOCACAO  AS KM_PERCORRIDA
FROM
    LOCACAO
INNER JOIN CLIENTE ON LOCACAO.IDCLIENTE = CLIENTE.IDCLIENTE;

-- QUESTÃO 04

SELECT
	VEICULO.IDVEICULO,
    VEICULO.MARCA,
    VEICULO.MODELO,
    VEICULO.PLACA
FROM
	VEICULO
INNER JOIN OPCIONAL_VEICULO ON VEICULO.IDVEICULO = OPCIONAL_VEICULO.IDVEICULO
WHERE
	OPCIONAL_VEICULO.IDVEICULO IS NULL;
    
-- QUESTÃO 05

SELECT
	VEICULO.IDVEICULO,
    VEICULO.MARCA,
    VEICULO.MODELO,
    COUNT(LOCACAO.IDLOCACAO) AS QUANTIDADE_DE_LOCACAO,
    SUM(LOCACAO.KM_ENTREGA - LOCACAO.KM_LOCACAO) AS KM_USADAS
FROM
	VEICULO
INNER JOIN LOCACAO ON VEICULO.IDVEICULO = LOCACAO.IDVEICULO
GROUP BY
	VEICULO.IDVEICULO,
    VEICULO.MARCA,
    VEICULO.MODELO;

-- QUESTÃO 06

SELECT
	CLIENTE.IDCLIENTE,
    CLIENTE.NOME,
    CLIENTE.FONE_CELULAR,
    LOCACAO.DT_LOCACAO,
    VEICULO.MARCA,
    VEICULO.MODELO,
    LOCACAO.IDFUNCIONARIO
FROM
	LOCACAO
INNER JOIN CLIENTE ON LOCACAO.IDCLIENTE = CLIENTE.IDCLIENTE
INNER JOIN VEICULO ON LOCACAO.IDVEICULO = VEICULO.IDVEICULO
INNER JOIN FUNCIONARIO ON LOCACAO.IDFUNCIONARIO = FUNCIONARIO.IDFUNCIONARIO;

-- QUESTÃO 07

SELECT
    DAYOFWEEK(LOCACAO.DT_LOCACAO) AS DiaSemana,
    COUNT(*) AS QuantidadeLocacoes
FROM
    LOCACAO
GROUP BY
    DiaSemana
ORDER BY
    DiaSemana;
    
-- QUESTÃO 08

SELECT
    YEAR(LOCACAO.DT_LOCACAO) AS Ano,
    MONTH(LOCACAO.DT_LOCACAO) AS Mes,
    AVG(LOCACAO.KM_ENTREGA - LOCACAO.KM_LOCACAO) AS QuilometragemMedia
FROM
    LOCACAO
GROUP BY
    Ano, Mes
ORDER BY
    Ano, Mes;

-- QUESTÃO 09

SELECT
	AVG(DATEDIFF(DT_ENTREGA, DT_LOCACAO)) AS TempoMedioLocacaoEmDias
FROM
	LOCACAO
WHERE DT_ENTREGA IS NOT NULL;

-- QUESTÃO 10

SELECT
	AVG(KM_ENTREGA - KM_LOCACAO) AS QuilometragemMediaLocacao
FROM
	LOCACAO
WHERE KM_ENTREGA IS NOT NULL;

-- QUESTÃO 11

SELECT
    OPCIONAL.DESCRICAO AS Opcional,
    COUNT(LOCACAO.IDLOCACAO) AS QuantidadeLocacoes
FROM
    OPCIONAL
INNER JOIN OPCIONAL_VEICULO ON OPCIONAL.IDOPCIONAL = OPCIONAL_VEICULO.IDOPCIONAL
INNER JOIN VEICULO ON OPCIONAL_VEICULO.IDVEICULO = VEICULO.IDVEICULO
INNER JOIN LOCACAO ON VEICULO.IDVEICULO = LOCACAO.IDVEICULO
GROUP BY
    OPCIONAL.DESCRICAO
ORDER BY
    QuantidadeLocacoes DESC;

-- QUESTÃO 12

SELECT
    LOCACAO.IDLOCACAO,
    LOCACAO.KM_LOCACAO,
    LOCACAO.KM_ENTREGA,
    TABELA.VALOR AS ValorPorKm,
    (LOCACAO.KM_ENTREGA - LOCACAO.KM_LOCACAO) AS QuilometrosUtilizados,
    ((LOCACAO.KM_ENTREGA - LOCACAO.KM_LOCACAO) * TABELA.VALOR) AS ValorTotal
FROM
    LOCACAO
INNER JOIN TABELA_VEICULO ON LOCACAO.IDVEICULO = TABELA_VEICULO.IDVEICULO
INNER JOIN TABELA ON TABELA_VEICULO.IDTABELA = TABELA.IDTABELA;

-- QUESTÃO 13

SELECT
    LOCACAO.IDLOCACAO,
    LOCACAO.DT_LOCACAO,
    LOCACAO.DT_ENTREGA,
    TABELA.VALOR AS ValorPorDia,
    DATEDIFF(LOCACAO.DT_ENTREGA, LOCACAO.DT_LOCACAO) AS DiasUtilizados,
    (DATEDIFF(LOCACAO.DT_ENTREGA, LOCACAO.DT_LOCACAO) * TABELA.VALOR) AS ValorTotal
FROM
    LOCACAO
INNER JOIN TABELA_VEICULO ON LOCACAO.IDVEICULO = TABELA_VEICULO.IDVEICULO
INNER JOIN TABELA ON TABELA_VEICULO.IDTABELA = TABELA.IDTABELA;